$prefixes: ('sm\\:': $Viewport\SM, 'md\\:': $Viewport\MD, 'lg\\:': $Viewport\LG, 'xl\\:': $Viewport\XL);

@mixin Classes($prefix: '') {

  $Scalar\Base: 4;
  $Scalar\Multipliers: (0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 16, 20, 24, 32, 40, 48, 56, 64);

  // Generate auto margin classes.
  .#{$prefix}mb-auto { margin-bottom: auto; }
  .#{$prefix}mr-auto { margin-right: auto; }
  .#{$prefix}ml-auto { margin-left: auto; }
  .#{$prefix}mt-auto { margin-top: auto; }
  .#{$prefix}mx-auto { @extend .#{$prefix}ml-auto, .#{$prefix}mr-auto; }
  .#{$prefix}my-auto { @extend .#{$prefix}mt-auto, .#{$prefix}mb-auto; }

  @each $i in $Scalar\Multipliers {

    // Generate font size classes.
    .#{$prefix}font-size-#{$i} { @include Convert\Pixel-Rem(font-size, ($i / $Scalar\Base) * $Base\Font\Size); }
    .#{$prefix}text-#{$i} { @extend .#{$prefix}font-size-#{$i}; }

    // Generate padding classes.
    .#{$prefix}pb-#{$i} { @include Convert\Pixel-Rem(padding-bottom, ($i / $Scalar\Base) * $Base\Font\Size); }
    .#{$prefix}pr-#{$i} { @include Convert\Pixel-Rem(padding-right, ($i / $Scalar\Base) * $Base\Font\Size); }
    .#{$prefix}pl-#{$i} { @include Convert\Pixel-Rem(padding-left, ($i / $Scalar\Base) * $Base\Font\Size); }
    .#{$prefix}pt-#{$i} { @include Convert\Pixel-Rem(padding-top, ($i / $Scalar\Base) * $Base\Font\Size); }
    .#{$prefix}px-#{$i} { @extend .#{$prefix}pl-#{$i}, .#{$prefix}pr-#{$i}; }
    .#{$prefix}py-#{$i} { @extend .#{$prefix}pt-#{$i}, .#{$prefix}pb-#{$i}; }

    // Generate margin classes.
    .#{$prefix}mb-#{$i} { @include Convert\Pixel-Rem(margin-bottom, ($i / $Scalar\Base) * $Base\Font\Size); }
    .#{$prefix}mr-#{$i} { @include Convert\Pixel-Rem(margin-right, ($i / $Scalar\Base) * $Base\Font\Size); }
    .#{$prefix}ml-#{$i} { @include Convert\Pixel-Rem(margin-left, ($i / $Scalar\Base) * $Base\Font\Size); }
    .#{$prefix}mt-#{$i} { @include Convert\Pixel-Rem(margin-top, ($i / $Scalar\Base) * $Base\Font\Size); }
    .#{$prefix}mx-#{$i} { @extend .#{$prefix}ml-#{$i}, .#{$prefix}mr-#{$i}; }
    .#{$prefix}my-#{$i} { @extend .#{$prefix}mt-#{$i}, .#{$prefix}mb-#{$i}; }

  }

  // Generate font-weight classes.
  @each $value in (200, 300, 400, 500, 600, 700) {
    .#{$prefix}font-weight-#{$value},
    .#{$prefix}text-#{$value} { font-weight: $value; }
  }

  // Generate text-transform classes.
  @each $value in (uppercase, lowercase, capitalize) {
    .#{$prefix}text-#{$value} { text-transform: $value; }
  }

  // Generate display classes.
  @each $value in (inline, block, inline-block, flex, inline-flex, grid, none) {
    .#{$prefix}display-#{$value} { display: $value; }
  }

  // Generate position classes.
  @each $value in (relative, absolute, fixed, static, sticky) {
    .#{$prefix}position-#{$value},
    .#{$prefix}#{$value} { position: $value; }
  }

  // Generate text-align classes.
  @each $value in (left, right, center, justify) {
    .#{$prefix}text-align-#{$value},
    .#{$prefix}text-#{$value} { text-align: $value; }
  }

  // Generate visibility classes.
  @each $value in (visible, hidden) {
    .#{$prefix}visibility-#{$value},
    .#{$prefix}vis-#{$value} { visibility: $value; }
  }

  // Generate justify-content classes.
  @each $value in (flex-start, flex-end, center, space-between, space-around) {
    .#{$prefix}justify-#{$value} { justify-content: $value; }
  }

  // Generate align-items classes.
  @each $value in (flex-start, flex-end, center, baseline, stretch) {
    .#{$prefix}items-#{$value} { align-items: $value; }
  }

  .#{$prefix}flex-column {
    @extend .#{$prefix}display-flex;
    flex-direction: column;
  }

  .#{$prefix}flex-row {
    @extend .#{$prefix}display-flex;
    flex-direction: row;
  }

  .#{$prefix}background-none,
  .#{$prefix}bg-none { background-color: transparent; }

  .#{$prefix}border-none { border-color: transparent; }

  .#{$prefix}text-none,
  .#{$prefix}color-none { color: transparent; }

  @each $color, $value in $Colors {

    // Background colors.
    .#{$prefix}background-#{$color},
    .#{$prefix}bg-#{$color} { background-color: $value; }

    .#{$prefix}border-#{$color} { border-color: $value; }

    // Text colors.
    .#{$prefix}text-#{$color},
    .#{$prefix}color-#{$color} { color: $value; }

    @each $shade, $value in Color\Shades($value) {

      // Background colors.
      .#{$prefix}background-#{$color}-#{$shade},
      .#{$prefix}bg-#{$color}-#{$shade} { background-color: $value; }

      // Border colors.
      .#{$prefix}border-#{$color}-#{$shade} { border-color: $value; }

      // Text colors.
      .#{$prefix}text-#{$color}-#{$shade},
      .#{$prefix}color-#{$color}-#{$shade} { color: $value; }

    }

  }

}

@include Classes();

@each $prefix, $breakpoint in $prefixes {
  @include Viewport\Min($breakpoint) { @include Classes($prefix); }
}
